{"version":3,"sources":["../static/js/0.e214ce23.chunk.js","pages/props.md"],"names":["webpackJsonp","488","module","exports"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/0.e214ce23.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 488:\n/***/ (function(module, exports) {\n\nmodule.exports = \"prop value\\nprop onChange\\n\\n<h1>Hello{value ? ', '+value : ''}!</h1>\\n\\n<input\\n  placeholder='What is your name?'\\n  value={value}\\n  onChange={onChange}\\n/>\\n\\nReact components wouldn't be React components without props. So as you may suspect, MDX components can have props too!\\n\\nDeclaring props\\n---------------\\n\\nTo add a prop to an MDX component, declare it at the top of your file like so:\\n\\n```\\nprop firstName\\n```\\n\\n`prop` statements cannot have any leading whitespace, and must appear before any other content or empty lines. The only exception is that they *may* be intermixed with import statements. So this is ok:\\n\\n```\\nimport Welcomer from './components/Welcomer'\\nprop firstName\\n```\\n\\nProp definitions can be mixed with imports\\n\\nUsing props\\n-----------\\n\\nOnce you've declared a prop, you can use it within a tag's attributes, or within curly braces in a JSX block. Bare in mind that you *cannot* use a prop within curly braces in *inline* JSX.\\n\\nSo, this is OK:\\n\\n```jsx\\nHello, <span children={firstName} />\\n```\\n\\nAs is this:\\n\\n```jsx\\n<blockqoute>I'm afraid I can't do that, {firstName}.</blockquote>\\n```\\n\\nBut this will just print the braces as text:\\n\\n```markdown\\nHello <span>{firstName}</span>.\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.e214ce23.chunk.js","module.exports = \"prop value\\nprop onChange\\n\\n<h1>Hello{value ? ', '+value : ''}!</h1>\\n\\n<input\\n  placeholder='What is your name?'\\n  value={value}\\n  onChange={onChange}\\n/>\\n\\nReact components wouldn't be React components without props. So as you may suspect, MDX components can have props too!\\n\\nDeclaring props\\n---------------\\n\\nTo add a prop to an MDX component, declare it at the top of your file like so:\\n\\n```\\nprop firstName\\n```\\n\\n`prop` statements cannot have any leading whitespace, and must appear before any other content or empty lines. The only exception is that they *may* be intermixed with import statements. So this is ok:\\n\\n```\\nimport Welcomer from './components/Welcomer'\\nprop firstName\\n```\\n\\nProp definitions can be mixed with imports\\n\\nUsing props\\n-----------\\n\\nOnce you've declared a prop, you can use it within a tag's attributes, or within curly braces in a JSX block. Bare in mind that you *cannot* use a prop within curly braces in *inline* JSX.\\n\\nSo, this is OK:\\n\\n```jsx\\nHello, <span children={firstName} />\\n```\\n\\nAs is this:\\n\\n```jsx\\n<blockqoute>I'm afraid I can't do that, {firstName}.</blockquote>\\n```\\n\\nBut this will just print the braces as text:\\n\\n```markdown\\nHello <span>{firstName}</span>.\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/raw-loader!./src/pages/props.md\n// module id = 488\n// module chunks = 0"],"sourceRoot":""}