webpackJsonp([0],{488:function(n,e){n.exports="prop value\nprop onChange\n\n<h1>Hello{value ? ', '+value : ''}!</h1>\n\n<input\n  placeholder='What is your name?'\n  value={value}\n  onChange={onChange}\n/>\n\nReact components wouldn't be React components without props. So as you may suspect, MDX components can have props too!\n\nDeclaring props\n---------------\n\nTo add a prop to an MDX component, declare it at the top of your file like so:\n\n```\nprop firstName\n```\n\n`prop` statements cannot have any leading whitespace, and must appear before any other content or empty lines. The only exception is that they *may* be intermixed with import statements. So this is ok:\n\n```\nimport Welcomer from './components/Welcomer'\nprop firstName\n```\n\nProp definitions can be mixed with imports\n\nUsing props\n-----------\n\nOnce you've declared a prop, you can use it within a tag's attributes, or within curly braces in a JSX block. Bare in mind that you *cannot* use a prop within curly braces in *inline* JSX.\n\nSo, this is OK:\n\n```jsx\nHello, <span children={firstName} />\n```\n\nAs is this:\n\n```jsx\n<blockqoute>I'm afraid I can't do that, {firstName}.</blockquote>\n```\n\nBut this will just print the braces as text:\n\n```markdown\nHello <span>{firstName}</span>.\n```\n"}});
//# sourceMappingURL=0.e214ce23.chunk.js.map